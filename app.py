# -*- coding: utf-8 -*-
"""Untitled86.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gPm32pSwi1sVlqeqKyJAYUo_gZ91WQoF
"""

!pip install streamlit numpy matplotlib opencv-python joblib
import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
import cv2
import joblib

# Load model and scaler
model = joblib.load("mnist_model.pkl")
scaler = joblib.load("scaler.pkl")

st.title("Handwritten Digit Recognition")
st.write("Upload an image of a digit (28x28 or similar), and the model will predict it.")

uploaded_file = st.file_uploader("Choose an image...", type=["png", "jpg", "jpeg"])

def preprocess_image(image_bytes):
    file_bytes = np.asarray(bytearray(image_bytes), dtype=np.uint8)
    img = cv2.imdecode(file_bytes, cv2.IMREAD_GRAYSCALE)

    if img is None:
        st.error("Could not read the image.")
        return None

    img_resized = cv2.resize(img, (28, 28))
    img_inverted = cv2.bitwise_not(img_resized)

    st.image(img_inverted, caption='Preprocessed Image', use_column_width=False, width=150)

    img_flat = img_inverted.reshape(1, -1).astype('float32')
    img_scaled = scaler.transform(img_flat)

    return img_scaled

if uploaded_file is not None:
    image_data = uploaded_file.read()
    preprocessed = preprocess_image(image_data)

    if preprocessed is not None:
        prediction = model.predict(preprocessed)
        st.success(f"Predicted Digit: {prediction[0]}")